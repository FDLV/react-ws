{"version":3,"sources":["components/Circle.js","App.js","reportWebVitals.js","index.js"],"names":["Circle","props","Element","width","diameter","height","float","MozBorderRadius","WebkitBorderRadius","borderRadius","background","boxShadow","style","App","useState","pixels","vis","setVis","color","setColor","Footer","paddingTop","toString","paddingLeft","fontSize","textAlign","textShadow","palette","position","bottom","visibility","left","RoundDiv","cursor","className","onChange","onClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAoBeA,MApBf,SAAgBC,GAEZ,IAAMC,EAAU,CACZC,MAAOF,EAAMG,SACbC,OAAQJ,EAAMG,SACdE,MAAO,OACPC,gBAAiB,OACjBC,mBAAoB,OACpBC,aAAc,OACdC,WAAY,qBACZC,UAAW,+BAGf,OACA,qBAAKC,MAAOV,K,MC6DDW,MArEf,WAYE,MAA0BC,mBAAS,GAAnC,mBACA,GADA,UAC4BA,mBAAS,KAArC,mBAAOC,EAAP,KACA,GADA,KACsBD,mBAAS,WAA/B,mBAAOE,EAAP,KAAYC,EAAZ,KACA,EAA0BH,mBAAS,WAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAGMC,EAAS,CACbC,aAAc,GAAKN,GAAQ,GAAGO,WAAW,KACzCC,YAAa,iBAAiBR,EAAOO,WAAW,SAChDJ,MAAO,QACPb,OAAQU,EACRS,SAAU,OACVC,UAAW,SACXC,WAAY,2IAGRC,EAAU,CACdC,SAAU,QACVC,OAAQ,OACRC,WAAYd,EACZe,KAAM,iBAAiBhB,EAAOO,WAAW,iBAGrCU,EAAW,CACf7B,MAAOY,EACPV,OAAQU,EACRN,aAAc,OACdwB,OAAQ,WAaV,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,CAAgBtB,MAAOe,EAAST,MAAOA,EAAOiB,SAAUhB,IACxD,qBAAKe,UAAU,SAAf,kDAGA,wBAAQA,UAAU,SAElB,qBAAKtB,MAAOQ,EAAZ,SACE,qBAAKR,MAAOoB,EAAUI,QAAS,WAzDjCnB,EADU,WAARD,EACK,UAGA,UAETqB,QAAQC,IAAI,WAoDR,SACE,cAAC,EAAD,CAAQlC,SAAUW,EAAOO,WAAW,eCxD/BiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.598ac318.chunk.js","sourcesContent":["function Circle(props) {\n\n    const Element = {\n        width: props.diameter,\n        height: props.diameter,\n        float: \"left\",\n        MozBorderRadius: \"50px\",\n        WebkitBorderRadius: \"50px\",\n        borderRadius: \"50px\",\n        background: \"rgb(255, 255, 255)\",\n        boxShadow: \"0 0 20px rgb(255, 255, 255)\"\n    }\n    \n    return (\n    <div style={Element}>\n\n    </div>\n  );\n}\n\nexport default Circle;","import React, { useState, useEffect } from 'react'\nimport { HexColorPicker } from \"react-colorful\"\nimport Circle from \"./components/Circle\"\n\nimport './App.css';\n\nfunction App() {\n\n  function palleteVis() {\n    if (vis === \"hidden\") {\n      setVis(\"visible\")\n    }\n    else {\n      setVis(\"hidden\")\n    }\n    console.log(\"asdf12\")\n  }\n\n  const [count, setCount] = useState(0);\n  const [pixels, setPixels] = useState(50);\n  const [vis, setVis] = useState(\"hidden\");\n  const [color, setColor] = useState(\"#aabbcc\");\n\n\n  const Footer = {\n    paddingTop: ((60 - pixels)/2).toString()+\"px\",\n    paddingLeft: \"calc((100vw - \"+pixels.toString()+\"px)/2)\",\n    color: \"white\",\n    height: pixels,\n    fontSize: \"16px\",\n    textAlign: \"center\",\n    textShadow: \"0 0 10px #fff, 0 0 20px #fff, 0 0 30px #fff, 0 0 40px #00a2ff, 0 0 70px #00a2ff, 0 0 80px #00a2ff, 0 0 100px #00a2ff, 0 0 150px #00a2ff\"\n  }\n\n  const palette = {\n    position: \"fixed\",\n    bottom: \"15px\",\n    visibility: vis,\n    left: \"calc((100vw - \"+pixels.toString()+\"px)/2 + 75px)\"\n  }\n\n  const RoundDiv = {\n    width: pixels,\n    height: pixels,\n    borderRadius: \"50px\",\n    cursor: \"pointer\"\n  }\n\n\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     setCount(count + 1)\n  //     console.log(count)\n  //   }, 10000);\n  //   return () => clearInterval(interval);\n  // }, [count]);\n\n  return (\n    <div className=\"App\">\n      <HexColorPicker style={palette} color={color} onChange={setColor} />\n      <div className=\"Header\">\n        Привет\n      </div>\n      <canvas className=\"Main\">\n      </canvas>\n      <div style={Footer}>\n        <div style={RoundDiv} onClick={() => {palleteVis()}}>\n          <Circle diameter={pixels.toString()+\"px\"} />\n        </div>        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}